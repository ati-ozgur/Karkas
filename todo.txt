# todo



## First to look

1. Read records

2. to dict, from dict

3. validate method

4. pydantic methods look.

1. add foreign key code generations
According to foreign keys, detail tables method will be added
config.json property will manage it.



    public List<Customer> GetRowsBySupportRepId(int pSupportRepId)
    {
        var list = this.Dal.QueryUsingColumnName(Customer.ColumnNames.SupportRepId, pSupportRepId);
        return list;
    }

        protected override CustomerDal Dal
    {
        get
        {
            CustomerDal d = new CustomerDal();
            d.Connection = this.Connection;
            d.IsInTransaction = this.IsInTransaction;
            return d;
        }
    } 



## Tests

1. Create looping script which will check following configurations

- UseSchemaNameInNamespaces
- UseSchemaNameInSqlQueries
- UseSchemaNameInFolders    
- UseQuotesInQueries
- UseGlobalUsings
- UseFileScopedNamespace


1. record struct?

1. add intellisense comments

somewhat done.


1. CRUD with identity tables v0

    Identity Insert,
    Normal Insert
    Read
    Update
    Delete

Chinook Customer ok

2. CRUD tests Normal tables v0
    Normal Insert
    Read
    Update
    Delete

3. Transaction normal
4. Transaction with Error, to see it is rolled back

5. Paging tests

6. Write oracle, chinook test for auto increment and normal

    fork and give a pull request, need to sign my commits. Do it later
    https://github.com/gvenzl/oci-oracle-xe/blob/main/examples/dkr-create-oracle-xe-server

7. column --> expected .net type
Need to create my own example database for these examples.

8. create dotnet/nuget packages

## Bugs

## Improvements and Nice to Have

1. Help documentation generation from /// comments

2. add [JsonPropertyName("XXX")] to code generation

JsonNamingPolicy includes new naming policies for snake_case (with an underscore) 




5. 

GetRows
GetOneValue
GetOneRow --> (first or default)
GetTopRows

For GetOneRow, need to add top, limit statements to the query.
Not added yet.

6. Refactoring methods to English Only Names

7. Add configuration method which initializes from configuration files (app.config ...)

8. Read logging and fix it

9. Later check multiple .net SDK versions
For now, we work with .net6
    <TargetFrameworks>net6.0;net8.0</TargetFrameworks>
https://learn.microsoft.com/en-us/nuget/create-packages/multiple-target-frameworks-project-file


10. https://learn.microsoft.com/en-us/nuget/create-packages/multiple-target-frameworks-project-file
think about multiple version support

11. change logging
https://learn.microsoft.com/en-us/dotnet/core/extensions/logger-message-generator
https://learn.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-7.0

12. For oracle, force decimal to int,long


## Documentation and Examples

1. give examples for dependency injection

2. use mermaid as markdown to create some diagrams
I have started doing it.
I need to improve documentation.
https://mermaid-js.github.io/mermaid/


## Code Review

1. Nullable compile warnings
    <Nullable>enable</Nullable>
    <Nullable>disable</Nullable>
https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/nullable-warnings


2. Karkas.Core.Data vs Karkas.Core.DataUtil ???
Should I fix the namespace?


4. CommandLineParser is good one.
https://github.com/commandlineparser/commandline
https://github.com/commandlineparser/commandline/wiki/Getting-Started
https://medium.com/@eduardosilva_94960/mastering-command-line-parsing-in-net-core-with-commandlineparser-c20721100359

## Decisions

1. Due to Oracle, I updated QueryHelper
It generates quoted string now.
Should I make this one customizable so that it could be turned off and on.



## sample databases

- https://github.com/lerocha/chinook-database
- https://github.com/jpwhite3/northwind-SQLite3/
- https://github.com/bradleygrant/sakila-sqlite3
