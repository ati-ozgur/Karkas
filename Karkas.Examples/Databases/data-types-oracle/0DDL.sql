/*******************************************************************************
   Create database
********************************************************************************/
CREATE USER datatypes
IDENTIFIED BY datatypes
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to datatypes;
GRANT resource to datatypes;
GRANT create session TO datatypes;
GRANT create table TO datatypes;
GRANT create view TO datatypes;



conn datatypes/datatypes


/*******************************************************************************
   Create Tables
********************************************************************************/
CREATE TABLE DENEME
(
    "PK_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    "C_INT" INT,
    "C_INTEGER" INTEGER,
    "C_CLOB" CLOB,
    CONSTRAINT PK_DENEME PRIMARY KEY  ("PK_ID")
);

CREATE TABLE INT_TABLES
(
  PK_ID INTEGER,
  COLUMN_INT       INTEGER                      NOT NULL,
  COLUMN_INTEGER   INTEGER                      NOT NULL,
  COLUMN_SMALLINT  INTEGER                      NOT NULL,
  COLUMN_NUMBER    NUMBER                       NOT NULL,
  COLUMN_DECIMAL   DECIMAL                      NOT NULL,
  CONSTRAINT PK_INT_TABLES PRIMARY KEY  ("PK_ID")
)
;


-- int32 max 10 bytes
-- int64 max 19 bytes
-- int128 max 39 bytes
CREATE TABLE DECIMAL_TO_INT_TABLES
(
PK_ID DECIMAL(10,0),
COLUMN_DECIMAL8  DECIMAL(8,0) NOT NULL,
COLUMN_DECIMAL10 DECIMAL(10,0) NOT NULL,
COLUMN_DECIMAL19 DECIMAL(19,0) NOT NULL,
COLUMN_DECIMAL21 DECIMAL(21,0) NOT NULL,
COLUMN_DECIMAL38 DECIMAL(38,0) NOT NULL,
CONSTRAINT PK_DECIMAL_TO_INT_TABLES PRIMARY KEY  ("PK_ID")
)
;

CREATE TABLE DECIMAL_TABLES
(
  DECIMAL_TABLES_KEY NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  COLUMN_DECIMAL0 DECIMAL(38,0) NOT NULL ENABLE, 
  COLUMN_DECIMAL1 DECIMAL(38,1) NOT NULL ENABLE, 
  COLUMN_DECIMAL2 DECIMAL(38,2) NOT NULL ENABLE, 
  COLUMN_DECIMAL3 DECIMAL(38,3) NOT NULL ENABLE, 
  COLUMN_DECIMAL4 DECIMAL(38,4) NOT NULL ENABLE, 
  COLUMN_DECIMAL5 DECIMAL(38,5) NOT NULL ENABLE, 
  COLUMN_DECIMAL6 DECIMAL(38,6) NOT NULL ENABLE, 
  COLUMN_DECIMAL7 DECIMAL(38,7) NOT NULL ENABLE,
  COLUMN_DECIMAL_NULL0 DECIMAL(38,0), 
  COLUMN_DECIMAL_NULL1 DECIMAL(38,1), 
  COLUMN_DECIMAL_NULL2 DECIMAL(38,2), 
  COLUMN_DECIMAL_NULL3 DECIMAL(38,3), 
  COLUMN_DECIMAL_NULL4 DECIMAL(38,4), 
  COLUMN_DECIMAL_NULL5 DECIMAL(38,5), 
  COLUMN_DECIMAL_NULL6 DECIMAL(38,6), 
  COLUMN_DECIMAL_NULL7 DECIMAL(38,7),
  CONSTRAINT DECIMAL_TABLES PRIMARY KEY  ("DECIMAL_TABLES_KEY")
)
;

CREATE TABLE ANSI_STRING (
    ANSI_STRING_KEY NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    C1 CHARACTER(5),
    C2 CHARACTER VARYING(5),
    C3 NATIONAL CHARACTER(5),
    C4 NATIONAL CHARACTER VARYING(5),
    CONSTRAINT ANSI_STRING PRIMARY KEY  ("ANSI_STRING_KEY")
);

CREATE TABLE ANSI_NUMERIC (
    ANSI_NUMERIC_KEY NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    C01 NUMERIC,
    C02 DECIMAL,
    C03 DEC,
    C04 INTEGER,
    C05 INT,
    C06 INTEGER,
    C07 SMALLINT,
    C08 FLOAT,
    C09 DOUBLE PRECISION,
    C10 REAL,
    CONSTRAINT ANSI_NUMERIC PRIMARY KEY  ("ANSI_NUMERIC_KEY")

);

CREATE TABLE T_NUMBER_DATATYPES 
( 
  T_NUMBER_DATATYPES_KEY NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  C1 NUMBER, 
  C2 FLOAT,
  C3 BINARY_FLOAT,
  C4 BINARY_DOUBLE,
  CONSTRAINT T_NUMBER_DATATYPES PRIMARY KEY  ("T_NUMBER_DATATYPES_KEY")
);

CREATE TABLE BLOB_EXAMPLE1
(    
BLOB_EXAMPLE1_KEY NUMBER(*,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
URL VARCHAR2(200 BYTE), 
REQUEST_KEY VARCHAR2(36 BYTE), 
REQUEST_JSON BLOB, 
RESPONSE_JSON BLOB, 
USERNAME VARCHAR2(50 BYTE),
CONSTRAINT BLOB_EXAMPLE1 PRIMARY KEY  ("BLOB_EXAMPLE1_KEY")
);

CREATE TABLE EMPLOYEE
(
    EMPLOYEE_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    LAST_NAME VARCHAR2(20) NOT NULL,
    FIRST_NAME VARCHAR2(20) NOT NULL,
    EMAIL VARCHAR2(50) NOT NULL,
    REPORTS_TO NUMBER,
    CONSTRAINT "PK_Employee" PRIMARY KEY  (EMPLOYEE_ID)
);


ALTER TABLE EMPLOYEE ADD CONSTRAINT "FK_EmployeeReportsTo"
    FOREIGN KEY (REPORTS_TO) REFERENCES EMPLOYEE (EMPLOYEE_ID)  ;

CREATE UNIQUE INDEX EMPLOYEE_EMAIL_IDX ON DATATYPES.EMPLOYEE (EMAIL);

CREATE INDEX EMPLOYEE_FIRST_NAME_IDX ON DATATYPES.EMPLOYEE (FIRST_NAME,LAST_NAME);


commit;
exit;
